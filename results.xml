<testsuites id="" name="" tests="143" failures="10" skipped="33" errors="0" time="150.122393">
<testsuite name="api/aapitest.spec.ts" timestamp="1670383134024" hostname="" tests="1" failures="0" skipped="0" time="0.677" errors="0">
<testcase name=" api test update settings" classname="[chromium] › api/aapitest.spec.ts ›  api test › update settings" time="0.677">
</testcase>
</testsuite>
<testsuite name="api/abuseReports.spec.ts" timestamp="1670383134024" hostname="" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="abuse report api test get all abuse report reasons" classname="[chromium] › api/abuseReports.spec.ts › abuse report api test › get all abuse report reasons" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="abuse report api test get all abuse reports" classname="[chromium] › api/abuseReports.spec.ts › abuse report api test › get all abuse reports" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="abuse report api test delete a abuse report" classname="[chromium] › api/abuseReports.spec.ts › abuse report api test › delete a abuse report" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/admins.spec.ts" timestamp="1670383134024" hostname="" tests="10" failures="0" skipped="0" time="3.728" errors="0">
<testcase name="admin api test get admin report overview" classname="[chromium] › api/admins.spec.ts › admin api test › get admin report overview" time="0.255">
</testcase>
<testcase name="admin api test get admin report summary" classname="[chromium] › api/admins.spec.ts › admin api test › get admin report summary" time="0.258">
</testcase>
<testcase name="admin api test get getAdminDashboardFeed" classname="[chromium] › api/admins.spec.ts › admin api test › get getAdminDashboardFeed" time="0.444">
</testcase>
<testcase name="admin api test get admin help" classname="[chromium] › api/admins.spec.ts › admin api test › get admin help" time="0.806">
</testcase>
<testcase name="admin api test get changelog lite" classname="[chromium] › api/admins.spec.ts › admin api test › get changelog lite" time="0.246">
</testcase>
<testcase name="admin api test get changelog pro" classname="[chromium] › api/admins.spec.ts › admin api test › get changelog pro" time="0.23">
</testcase>
<testcase name="admin api test get getAdminNotices" classname="[chromium] › api/admins.spec.ts › admin api test › get getAdminNotices" time="0.221">
</testcase>
<testcase name="admin api test get admin promo notices " classname="[chromium] › api/admins.spec.ts › admin api test › get admin promo notices " time="0.804">
</testcase>
<testcase name="admin api test get admin logs " classname="[chromium] › api/admins.spec.ts › admin api test › get admin logs " time="0.237">
</testcase>
<testcase name="admin api test get admin export logs " classname="[chromium] › api/admins.spec.ts › admin api test › get admin export logs " time="0.227">
</testcase>
</testsuite>
<testsuite name="api/announcements.spec.ts" timestamp="1670383134024" hostname="" tests="6" failures="0" skipped="0" time="2.484" errors="0">
<testcase name="announcements api test get all announcements" classname="[chromium] › api/announcements.spec.ts › announcements api test › get all announcements" time="0.216">
</testcase>
<testcase name="announcements api test get single announcement" classname="[chromium] › api/announcements.spec.ts › announcements api test › get single announcement" time="0.455">
</testcase>
<testcase name="announcements api test create a announcement" classname="[chromium] › api/announcements.spec.ts › announcements api test › create a announcement" time="0.234">
</testcase>
<testcase name="announcements api test update a announcement" classname="[chromium] › api/announcements.spec.ts › announcements api test › update a announcement" time="0.436">
</testcase>
<testcase name="announcements api test delete a announcement" classname="[chromium] › api/announcements.spec.ts › announcements api test › delete a announcement" time="0.464">
</testcase>
<testcase name="announcements api test update batch announcements" classname="[chromium] › api/announcements.spec.ts › announcements api test › update batch announcements" time="0.679">
</testcase>
</testsuite>
<testsuite name="api/coupons.spec.ts" timestamp="1670383134024" hostname="" tests="5" failures="0" skipped="0" time="3.099" errors="0">
<testcase name="coupon api test get all coupons" classname="[chromium] › api/coupons.spec.ts › coupon api test › get all coupons" time="0.201">
</testcase>
<testcase name="coupon api test get single coupon" classname="[chromium] › api/coupons.spec.ts › coupon api test › get single coupon" time="0.75">
</testcase>
<testcase name="coupon api test create a coupon" classname="[chromium] › api/coupons.spec.ts › coupon api test › create a coupon" time="0.536">
</testcase>
<testcase name="coupon api test update a coupon" classname="[chromium] › api/coupons.spec.ts › coupon api test › update a coupon" time="0.828">
</testcase>
<testcase name="coupon api test delete a coupon" classname="[chromium] › api/coupons.spec.ts › coupon api test › delete a coupon" time="0.784">
</testcase>
</testsuite>
<testsuite name="api/customers.spec.ts" timestamp="1670383134024" hostname="" tests="5" failures="0" skipped="0" time="2.012" errors="0">
<testcase name="customers api test get all customers" classname="[chromium] › api/customers.spec.ts › customers api test › get all customers" time="0.215">
</testcase>
<testcase name="customers api test get single customer" classname="[chromium] › api/customers.spec.ts › customers api test › get single customer" time="0.496">
</testcase>
<testcase name="customers api test create a customer" classname="[chromium] › api/customers.spec.ts › customers api test › create a customer" time="0.28">
</testcase>
<testcase name="customers api test update a customer" classname="[chromium] › api/customers.spec.ts › customers api test › update a customer" time="0.498">
</testcase>
<testcase name="customers api test delete a customer" classname="[chromium] › api/customers.spec.ts › customers api test › delete a customer" time="0.523">
</testcase>
</testsuite>
<testsuite name="api/dummyData.spec.ts" timestamp="1670383134024" hostname="" tests="2" failures="0" skipped="0" time="0.612" errors="0">
<testcase name="dummy Data api test get dummy data status" classname="[chromium] › api/dummyData.spec.ts › dummy Data api test › get dummy data status" time="0.201">
</testcase>
<testcase name="dummy Data api test clear dummuy data" classname="[chromium] › api/dummyData.spec.ts › dummy Data api test › clear dummuy data" time="0.411">
</testcase>
</testsuite>
<testsuite name="api/followStores.spec.ts" timestamp="1670383134024" hostname="" tests="2" failures="0" skipped="0" time="0.93" errors="0">
<testcase name="follow store api test get store follow status" classname="[chromium] › api/followStores.spec.ts › follow store api test › get store follow status" time="0.443">
</testcase>
<testcase name="follow store api test follow-unfollow a store" classname="[chromium] › api/followStores.spec.ts › follow store api test › follow-unfollow a store" time="0.487">
</testcase>
</testsuite>
<testsuite name="api/modules.spec.ts" timestamp="1670383134024" hostname="" tests="3" failures="0" skipped="0" time="1.181" errors="0">
<testcase name="modules api test get all modules" classname="[chromium] › api/modules.spec.ts › modules api test › get all modules" time="0.194">
</testcase>
<testcase name="modules api test deactivate a module" classname="[chromium] › api/modules.spec.ts › modules api test › deactivate a module" time="0.59">
</testcase>
<testcase name="modules api test activate a module" classname="[chromium] › api/modules.spec.ts › modules api test › activate a module" time="0.397">
</testcase>
</testsuite>
<testsuite name="api/orderNotes.spec.ts" timestamp="1670383134024" hostname="" tests="4" failures="0" skipped="0" time="4.086" errors="0">
<testcase name="order note api test get all order notes" classname="[chromium] › api/orderNotes.spec.ts › order note api test › get all order notes" time="1.226">
</testcase>
<testcase name="order note api test get single order note" classname="[chromium] › api/orderNotes.spec.ts › order note api test › get single order note" time="1.243">
</testcase>
<testcase name="order note api test create an order note" classname="[chromium] › api/orderNotes.spec.ts › order note api test › create an order note" time="0.422">
</testcase>
<testcase name="order note api test delete an order note" classname="[chromium] › api/orderNotes.spec.ts › order note api test › delete an order note" time="1.195">
</testcase>
</testsuite>
<testsuite name="api/orders.spec.ts" timestamp="1670383134024" hostname="" tests="4" failures="0" skipped="0" time="2.559" errors="0">
<testcase name="order api test get all orders" classname="[chromium] › api/orders.spec.ts › order api test › get all orders" time="0.233">
</testcase>
<testcase name="order api test get orders summary" classname="[chromium] › api/orders.spec.ts › order api test › get orders summary" time="0.2">
</testcase>
<testcase name="order api test get single order" classname="[chromium] › api/orders.spec.ts › order api test › get single order" time="1.013">
</testcase>
<testcase name="order api test update an order" classname="[chromium] › api/orders.spec.ts › order api test › update an order" time="1.113">
</testcase>
</testsuite>
<testsuite name="api/productAdvertisements.spec.ts" timestamp="1670383134024" hostname="" tests="6" failures="4" skipped="0" time="7.742" errors="0">
<testcase name="product advertisement api test get all advertised product stores" classname="[chromium] › api/productAdvertisements.spec.ts › product advertisement api test › get all advertised product stores" time="0.205">
</testcase>
<testcase name="product advertisement api test get all advertised product" classname="[chromium] › api/productAdvertisements.spec.ts › product advertisement api test › get all advertised product" time="0.213">
</testcase>
<testcase name="product advertisement api test create a product advertisement" classname="[chromium] › api/productAdvertisements.spec.ts › product advertisement api test › create a product advertisement" time="1.602">
<failure message="productAdvertisements.spec.ts:37:5 create a product advertisement" type="FAILURE">
<![CDATA[  [chromium] › api/productAdvertisements.spec.ts:37:5 › product advertisement api test › create a product advertisement 

    Error: expect(received).toBeTruthy()

    Received: false

      41 |
      42 |         let response = await request.post(endPoints.createProductAdvertisement, { data: { vendor_id: sellerId, product_id: productId } })
    > 43 |         expect(response.ok()).toBeTruthy()
         |                               ^
      44 |         expect(response.status()).toBe(200)
      45 |
      46 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:43:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      41 |
      42 |         let response = await request.post(endPoints.createProductAdvertisement, { data: { vendor_id: sellerId, product_id: productId } })
    > 43 |         expect(response.ok()).toBeTruthy()
         |                               ^
      44 |         expect(response.status()).toBe(200)
      45 |
      46 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:43:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      41 |
      42 |         let response = await request.post(endPoints.createProductAdvertisement, { data: { vendor_id: sellerId, product_id: productId } })
    > 43 |         expect(response.ok()).toBeTruthy()
         |                               ^
      44 |         expect(response.status()).toBe(200)
      45 |
      46 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:43:31
]]>
</failure>
</testcase>
<testcase name="product advertisement api test expire a product advertisement" classname="[chromium] › api/productAdvertisements.spec.ts › product advertisement api test › expire a product advertisement" time="2.222">
<failure message="productAdvertisements.spec.ts:51:5 expire a product advertisement" type="FAILURE">
<![CDATA[  [chromium] › api/productAdvertisements.spec.ts:51:5 › product advertisement api test › expire a product advertisement 

    Error: expect(received).toBeTruthy()

    Received: false

      54 |
      55 |         let response = await request.put(endPoints.expireProductAdvertisement(productAdvertisementId))
    > 56 |         expect(response.ok()).toBeTruthy()
         |                               ^
      57 |         expect(response.status()).toBe(200)
      58 |
      59 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:56:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      54 |
      55 |         let response = await request.put(endPoints.expireProductAdvertisement(productAdvertisementId))
    > 56 |         expect(response.ok()).toBeTruthy()
         |                               ^
      57 |         expect(response.status()).toBe(200)
      58 |
      59 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:56:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      54 |
      55 |         let response = await request.put(endPoints.expireProductAdvertisement(productAdvertisementId))
    > 56 |         expect(response.ok()).toBeTruthy()
         |                               ^
      57 |         expect(response.status()).toBe(200)
      58 |
      59 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:56:31
]]>
</failure>
</testcase>
<testcase name="product advertisement api test delete a product advertisement" classname="[chromium] › api/productAdvertisements.spec.ts › product advertisement api test › delete a product advertisement" time="2.264">
<failure message="productAdvertisements.spec.ts:63:5 delete a product advertisement" type="FAILURE">
<![CDATA[  [chromium] › api/productAdvertisements.spec.ts:63:5 › product advertisement api test › delete a product advertisement 

    Error: expect(received).toBeTruthy()

    Received: false

      66 |
      67 |         let response = await request.delete(endPoints.deleteProductAdvertisement(productAdvertisementId))
    > 68 |         expect(response.ok()).toBeTruthy()
         |                               ^
      69 |         expect(response.status()).toBe(200)
      70 |
      71 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:68:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      66 |
      67 |         let response = await request.delete(endPoints.deleteProductAdvertisement(productAdvertisementId))
    > 68 |         expect(response.ok()).toBeTruthy()
         |                               ^
      69 |         expect(response.status()).toBe(200)
      70 |
      71 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:68:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      66 |
      67 |         let response = await request.delete(endPoints.deleteProductAdvertisement(productAdvertisementId))
    > 68 |         expect(response.ok()).toBeTruthy()
         |                               ^
      69 |         expect(response.status()).toBe(200)
      70 |
      71 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:68:31
]]>
</failure>
</testcase>
<testcase name="product advertisement api test update batch product advertisements" classname="[chromium] › api/productAdvertisements.spec.ts › product advertisement api test › update batch product advertisements" time="1.236">
<failure message="productAdvertisements.spec.ts:76:5 update batch product advertisements" type="FAILURE">
<![CDATA[  [chromium] › api/productAdvertisements.spec.ts:76:5 › product advertisement api test › update batch product advertisements 

    Error: expect(received).toBeTruthy()

    Received: false

      79 |
      80 |         let response = await request.put(endPoints.updateBatchProductAdvertisements, { data: { ids: allproductAdvertisementIds, action: "delete" } })
    > 81 |         expect(response.ok()).toBeTruthy()
         |                               ^
      82 |         expect(response.status()).toBe(200)
      83 |
      84 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:81:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      79 |
      80 |         let response = await request.put(endPoints.updateBatchProductAdvertisements, { data: { ids: allproductAdvertisementIds, action: "delete" } })
    > 81 |         expect(response.ok()).toBeTruthy()
         |                               ^
      82 |         expect(response.status()).toBe(200)
      83 |
      84 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:81:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      79 |
      80 |         let response = await request.put(endPoints.updateBatchProductAdvertisements, { data: { ids: allproductAdvertisementIds, action: "delete" } })
    > 81 |         expect(response.ok()).toBeTruthy()
         |                               ^
      82 |         expect(response.status()).toBe(200)
      83 |
      84 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productAdvertisements.spec.ts:81:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/productAttributes.spec.ts" timestamp="1670383134024" hostname="" tests="5" failures="0" skipped="0" time="1.672" errors="0">
<testcase name="attribute api test get all attributes" classname="[chromium] › api/productAttributes.spec.ts › attribute api test › get all attributes" time="0.211">
</testcase>
<testcase name="attribute api test get single attribute" classname="[chromium] › api/productAttributes.spec.ts › attribute api test › get single attribute" time="0.408">
</testcase>
<testcase name="attribute api test create an attribute" classname="[chromium] › api/productAttributes.spec.ts › attribute api test › create an attribute" time="0.209">
</testcase>
<testcase name="attribute api test update an attribute" classname="[chromium] › api/productAttributes.spec.ts › attribute api test › update an attribute" time="0.431">
</testcase>
<testcase name="attribute api test delete an attribute" classname="[chromium] › api/productAttributes.spec.ts › attribute api test › delete an attribute" time="0.413">
</testcase>
</testsuite>
<testsuite name="api/productAttributeTerms.spec.ts" timestamp="1670383134024" hostname="" tests="5" failures="0" skipped="0" time="3.127" errors="0">
<testcase name="attribute term api test get all attribute terms" classname="[chromium] › api/productAttributeTerms.spec.ts › attribute term api test › get all attribute terms" time="0.64">
</testcase>
<testcase name="attribute term api test get single attribute term" classname="[chromium] › api/productAttributeTerms.spec.ts › attribute term api test › get single attribute term" time="0.607">
</testcase>
<testcase name="attribute term api test create an attribute term" classname="[chromium] › api/productAttributeTerms.spec.ts › attribute term api test › create an attribute term" time="0.617">
</testcase>
<testcase name="attribute term api test update an attribute term " classname="[chromium] › api/productAttributeTerms.spec.ts › attribute term api test › update an attribute term " time="0.642">
</testcase>
<testcase name="attribute term api test delete an attribute term" classname="[chromium] › api/productAttributeTerms.spec.ts › attribute term api test › delete an attribute term" time="0.621">
</testcase>
</testsuite>
<testsuite name="api/productReviews.spec.ts" timestamp="1670383134024" hostname="" tests="3" failures="0" skipped="0" time="1.214" errors="0">
<testcase name="product review api test get all product reviews" classname="[chromium] › api/productReviews.spec.ts › product review api test › get all product reviews" time="0.201">
</testcase>
<testcase name="product review api test get product reviews summary" classname="[chromium] › api/productReviews.spec.ts › product review api test › get product reviews summary" time="0.203">
</testcase>
<testcase name="product review api test update a product review" classname="[chromium] › api/productReviews.spec.ts › product review api test › update a product review" time="0.81">
</testcase>
</testsuite>
<testsuite name="api/products.spec.ts" timestamp="1670383134024" hostname="" tests="12" failures="0" skipped="0" time="4.209" errors="0">
<testcase name="product api test get products summary" classname="[chromium] › api/products.spec.ts › product api test › get products summary" time="0.199">
</testcase>
<testcase name="product api test get top rated products" classname="[chromium] › api/products.spec.ts › product api test › get top rated products" time="0.221">
</testcase>
<testcase name="product api test get best selling products" classname="[chromium] › api/products.spec.ts › product api test › get best selling products" time="0.254">
</testcase>
<testcase name="product api test get featured products" classname="[chromium] › api/products.spec.ts › product api test › get featured products" time="0.212">
</testcase>
<testcase name="product api test get latest products" classname="[chromium] › api/products.spec.ts › product api test › get latest products" time="0.235">
</testcase>
<testcase name="product api test get all multistep categories" classname="[chromium] › api/products.spec.ts › product api test › get all multistep categories" time="0.212">
</testcase>
<testcase name="product api test get all products" classname="[chromium] › api/products.spec.ts › product api test › get all products" time="0.232">
</testcase>
<testcase name="product api test get single product" classname="[chromium] › api/products.spec.ts › product api test › get single product" time="0.533">
</testcase>
<testcase name="product api test get all related products" classname="[chromium] › api/products.spec.ts › product api test › get all related products" time="0.573">
</testcase>
<testcase name="product api test create a product" classname="[chromium] › api/products.spec.ts › product api test › create a product" time="0.364">
</testcase>
<testcase name="product api test update a product" classname="[chromium] › api/products.spec.ts › product api test › update a product" time="0.6">
</testcase>
<testcase name="product api test delete a product" classname="[chromium] › api/products.spec.ts › product api test › delete a product" time="0.574">
</testcase>
</testsuite>
<testsuite name="api/productVariations.spec.ts" timestamp="1670383134024" hostname="" tests="5" failures="1" skipped="0" time="8.493" errors="0">
<testcase name="product variation api test get all product variations" classname="[chromium] › api/productVariations.spec.ts › product variation api test › get all product variations" time="1.27">
</testcase>
<testcase name="product variation api test get single product variation" classname="[chromium] › api/productVariations.spec.ts › product variation api test › get single product variation" time="1.232">
</testcase>
<testcase name="product variation api test create a product variation" classname="[chromium] › api/productVariations.spec.ts › product variation api test › create a product variation" time="0.631">
</testcase>
<testcase name="product variation api test update a product variation" classname="[chromium] › api/productVariations.spec.ts › product variation api test › update a product variation" time="1.301">
</testcase>
<testcase name="product variation api test delete a product variation" classname="[chromium] › api/productVariations.spec.ts › product variation api test › delete a product variation" time="4.059">
<failure message="productVariations.spec.ts:72:5 delete a product variation" type="FAILURE">
<![CDATA[  [chromium] › api/productVariations.spec.ts:72:5 › product variation api test › delete a product variation 

    Error: expect(received).toBeTruthy()

    Received: false

      75 |         let response = await request.delete(endPoints.deleteProductVariation(productId, variationId))
      76 |
    > 77 |         expect(response.ok()).toBeTruthy()
         |                               ^
      78 |         expect(response.status()).toBe(200)
      79 |         // let responseBody = await response.json()
      80 |         // console.log(responseBody)

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productVariations.spec.ts:77:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      75 |         let response = await request.delete(endPoints.deleteProductVariation(productId, variationId))
      76 |
    > 77 |         expect(response.ok()).toBeTruthy()
         |                               ^
      78 |         expect(response.status()).toBe(200)
      79 |         // let responseBody = await response.json()
      80 |         // console.log(responseBody)

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productVariations.spec.ts:77:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      75 |         let response = await request.delete(endPoints.deleteProductVariation(productId, variationId))
      76 |
    > 77 |         expect(response.ok()).toBeTruthy()
         |                               ^
      78 |         expect(response.status()).toBe(200)
      79 |         // let responseBody = await response.json()
      80 |         // console.log(responseBody)

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/productVariations.spec.ts:77:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/refunds.spec.ts" timestamp="1670383134024" hostname="" tests="5" failures="1" skipped="2" time="3.595" errors="0">
<testcase name="refunds api test get all refunds" classname="[chromium] › api/refunds.spec.ts › refunds api test › get all refunds" time="2.594">
</testcase>
<testcase name="refunds api test get all refunds by status" classname="[chromium] › api/refunds.spec.ts › refunds api test › get all refunds by status" time="0.216">
</testcase>
<testcase name="refunds api test approve a refund" classname="[chromium] › api/refunds.spec.ts › refunds api test › approve a refund" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="refunds api test cancel a refund" classname="[chromium] › api/refunds.spec.ts › refunds api test › cancel a refund" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="refunds api test delete a refund" classname="[chromium] › api/refunds.spec.ts › refunds api test › delete a refund" time="0.785">
<failure message="refunds.spec.ts:71:5 delete a refund" type="FAILURE">
<![CDATA[  [chromium] › api/refunds.spec.ts:71:5 › refunds api test › delete a refund =======================

    TypeError: Cannot read property 'id' of undefined

       at ../utils/apiUtils.ts:362

      360 |     async getRefundId() {
      361 |         let allRefunds = await this.getAllRefunds()
    > 362 |         let refundId = allRefunds[0].id
          |                                      ^
      363 |         // console.log(refundId)
      364 |         return refundId
      365 |     }

        at ApiUtils.getRefundId (/home/runner/work/dokan/dokan/tests/e2e/utils/apiUtils.ts:362:38)
        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/refunds.spec.ts:73:24

    Retry #1 ---------------------------------------------------------------------------------------

    TypeError: Cannot read property 'id' of undefined

       at ../utils/apiUtils.ts:362

      360 |     async getRefundId() {
      361 |         let allRefunds = await this.getAllRefunds()
    > 362 |         let refundId = allRefunds[0].id
          |                                      ^
      363 |         // console.log(refundId)
      364 |         return refundId
      365 |     }

        at ApiUtils.getRefundId (/home/runner/work/dokan/dokan/tests/e2e/utils/apiUtils.ts:362:38)
        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/refunds.spec.ts:73:24

    Retry #2 ---------------------------------------------------------------------------------------

    TypeError: Cannot read property 'id' of undefined

       at ../utils/apiUtils.ts:362

      360 |     async getRefundId() {
      361 |         let allRefunds = await this.getAllRefunds()
    > 362 |         let refundId = allRefunds[0].id
          |                                      ^
      363 |         // console.log(refundId)
      364 |         return refundId
      365 |     }

        at ApiUtils.getRefundId (/home/runner/work/dokan/dokan/tests/e2e/utils/apiUtils.ts:362:38)
        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/refunds.spec.ts:73:24
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/reports.spec.ts" timestamp="1670383134024" hostname="" tests="4" failures="0" skipped="0" time="0.897" errors="0">
<testcase name="report api test get sales overview report" classname="[chromium] › api/reports.spec.ts › report api test › get sales overview report" time="0.219">
</testcase>
<testcase name="report api test get summary report" classname="[chromium] › api/reports.spec.ts › report api test › get summary report" time="0.204">
</testcase>
<testcase name="report api test get top earners report" classname="[chromium] › api/reports.spec.ts › report api test › get top earners report" time="0.233">
</testcase>
<testcase name="report api test get top selling products report " classname="[chromium] › api/reports.spec.ts › report api test › get top selling products report " time="0.241">
</testcase>
</testsuite>
<testsuite name="api/reverseWithdrawal.spec.ts" timestamp="1670383134024" hostname="" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="reverse withdrawal api test get reverse withdrawal transaction types" classname="[chromium] › api/reverseWithdrawal.spec.ts › reverse withdrawal api test › get reverse withdrawal transaction types" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="reverse withdrawal api test get all reverse withdrawal stores" classname="[chromium] › api/reverseWithdrawal.spec.ts › reverse withdrawal api test › get all reverse withdrawal stores" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="reverse withdrawal api test get all reverse withdrawal store balance" classname="[chromium] › api/reverseWithdrawal.spec.ts › reverse withdrawal api test › get all reverse withdrawal store balance" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="reverse withdrawal api test getAllReverseWithdrawalTransactions" classname="[chromium] › api/reverseWithdrawal.spec.ts › reverse withdrawal api test › getAllReverseWithdrawalTransactions" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/roles.spec.ts" timestamp="1670383134024" hostname="" tests="1" failures="0" skipped="0" time="0.193" errors="0">
<testcase name="roles api test get all user roles " classname="[chromium] › api/roles.spec.ts › roles api test › get all user roles " time="0.193">
</testcase>
</testsuite>
<testsuite name="api/settings.spec.ts" timestamp="1670383134024" hostname="" tests="2" failures="0" skipped="1" time="0.201" errors="0">
<testcase name="settings api test get settings" classname="[chromium] › api/settings.spec.ts › settings api test › get settings" time="0.201">
</testcase>
<testcase name="settings api test update settings" classname="[chromium] › api/settings.spec.ts › settings api test › update settings" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/storeCategories.spec.ts" timestamp="1670383134024" hostname="" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="store categories api test get default store category" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › get default store category" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store categories api test get all store categories" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › get all store categories" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store categories api test get single store category" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › get single store category" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store categories api test create a store category" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › create a store category" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store categories api test update a store category" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › update a store category" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store categories api test delete a store category" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › delete a store category" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store categories api test set default store category" classname="[chromium] › api/storeCategories.spec.ts › store categories api test › set default store category" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/storeReviews.spec.ts" timestamp="1670383134024" hostname="" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="store reviews api test get all store reviews" classname="[chromium] › api/storeReviews.spec.ts › store reviews api test › get all store reviews" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store reviews api test get single store review" classname="[chromium] › api/storeReviews.spec.ts › store reviews api test › get single store review" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store reviews api test update a store review" classname="[chromium] › api/storeReviews.spec.ts › store reviews api test › update a store review" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store reviews api test delete a store review " classname="[chromium] › api/storeReviews.spec.ts › store reviews api test › delete a store review " time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store reviews api test restore a deleted store review " classname="[chromium] › api/storeReviews.spec.ts › store reviews api test › restore a deleted store review " time="0">
<skipped>
</skipped>
</testcase>
<testcase name="store reviews api test update batch store review" classname="[chromium] › api/storeReviews.spec.ts › store reviews api test › update batch store review" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/stores.spec.ts" timestamp="1670383134024" hostname="" tests="15" failures="0" skipped="2" time="5.027" errors="0">
<testcase name="stores api test get all stores check store availability status" classname="[chromium] › api/stores.spec.ts › stores api test › get all stores check store availability status" time="0.201">
</testcase>
<testcase name="stores api test get all stores" classname="[chromium] › api/stores.spec.ts › stores api test › get all stores" time="0.214">
</testcase>
<testcase name="stores api test get single store" classname="[chromium] › api/stores.spec.ts › stores api test › get single store" time="0.433">
</testcase>
<testcase name="stores api test create a store" classname="[chromium] › api/stores.spec.ts › stores api test › create a store" time="0.262">
</testcase>
<testcase name="stores api test update a store" classname="[chromium] › api/stores.spec.ts › stores api test › update a store" time="0.451">
</testcase>
<testcase name="stores api test delete a store" classname="[chromium] › api/stores.spec.ts › stores api test › delete a store" time="0.464">
</testcase>
<testcase name="stores api test get store current visitor" classname="[chromium] › api/stores.spec.ts › stores api test › get store current visitor" time="0.191">
</testcase>
<testcase name="stores api test get store stats" classname="[chromium] › api/stores.spec.ts › stores api test › get store stats" time="0.451">
</testcase>
<testcase name="stores api test get store categories" classname="[chromium] › api/stores.spec.ts › stores api test › get store categories" time="0.457">
</testcase>
<testcase name="stores api test get store products" classname="[chromium] › api/stores.spec.ts › stores api test › get store products" time="0.498">
</testcase>
<testcase name="stores api test get store reviews" classname="[chromium] › api/stores.spec.ts › stores api test › get store reviews" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="stores api test create a store review" classname="[chromium] › api/stores.spec.ts › stores api test › create a store review" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="stores api test update a store status" classname="[chromium] › api/stores.spec.ts › stores api test › update a store status" time="0.515">
</testcase>
<testcase name="stores api test admin contact store" classname="[chromium] › api/stores.spec.ts › stores api test › admin contact store" time="0.443">
</testcase>
<testcase name="stores api test admitn email store" classname="[chromium] › api/stores.spec.ts › stores api test › admitn email store" time="0.447">
</testcase>
</testsuite>
<testsuite name="api/supportTickets.spec.ts" timestamp="1670383134024" hostname="" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="support ticket api test get all support ticket customers" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › get all support ticket customers" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test get all support tickets" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › get all support tickets" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test get single support ticket" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › get single support ticket" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test create a support ticket comment" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › create a support ticket comment" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test update support ticket status" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › update support ticket status" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test update a support ticket email notification" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › update a support ticket email notification" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test delete a support ticket comment" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › delete a support ticket comment" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="support ticket api test update batch support tickets" classname="[chromium] › api/supportTickets.spec.ts › support ticket api test › update batch support tickets" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/wholesaleCustomers.spec.ts" timestamp="1670383134024" hostname="" tests="4" failures="0" skipped="0" time="2.139" errors="0">
<testcase name="wholesale customers api test get all wholesale customers" classname="[chromium] › api/wholesaleCustomers.spec.ts › wholesale customers api test › get all wholesale customers" time="0.201">
</testcase>
<testcase name="wholesale customers api test create a wholesale customer" classname="[chromium] › api/wholesaleCustomers.spec.ts › wholesale customers api test › create a wholesale customer" time="0.513">
</testcase>
<testcase name="wholesale customers api test update a wholesale customer" classname="[chromium] › api/wholesaleCustomers.spec.ts › wholesale customers api test › update a wholesale customer" time="0.713">
</testcase>
<testcase name="wholesale customers api test delete a wholesale customer" classname="[chromium] › api/wholesaleCustomers.spec.ts › wholesale customers api test › delete a wholesale customer" time="0.712">
</testcase>
</testsuite>
<testsuite name="api/withdraws.spec.ts" timestamp="1670383134024" hostname="" tests="6" failures="4" skipped="0" time="4.674" errors="0">
<testcase name="withdraw api test get balance details" classname="[chromium] › api/withdraws.spec.ts › withdraw api test › get balance details" time="0.204">
</testcase>
<testcase name="withdraw api test get all withdraws" classname="[chromium] › api/withdraws.spec.ts › withdraw api test › get all withdraws" time="0.202">
</testcase>
<testcase name="withdraw api test get single withdraw" classname="[chromium] › api/withdraws.spec.ts › withdraw api test › get single withdraw" time="1.19">
<failure message="withdraws.spec.ts:47:5 get single withdraw" type="FAILURE">
<![CDATA[  [chromium] › api/withdraws.spec.ts:47:5 › withdraw api test › get single withdraw ================

    Error: expect(received).toBeTruthy()

    Received: false

      50 |
      51 |         let response = await request.get(endPoints.getSingleWithdraw(withdrawId))
    > 52 |         expect(response.ok()).toBeTruthy()
         |                               ^
      53 |         expect(response.status()).toBe(200)
      54 |
      55 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:52:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      50 |
      51 |         let response = await request.get(endPoints.getSingleWithdraw(withdrawId))
    > 52 |         expect(response.ok()).toBeTruthy()
         |                               ^
      53 |         expect(response.status()).toBe(200)
      54 |
      55 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:52:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      50 |
      51 |         let response = await request.get(endPoints.getSingleWithdraw(withdrawId))
    > 52 |         expect(response.ok()).toBeTruthy()
         |                               ^
      53 |         expect(response.status()).toBe(200)
      54 |
      55 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:52:31
]]>
</failure>
</testcase>
<testcase name="withdraw api test create a withdraw" classname="[chromium] › api/withdraws.spec.ts › withdraw api test › create a withdraw" time="0.667">
<failure message="withdraws.spec.ts:59:5 create a withdraw" type="FAILURE">
<![CDATA[  [chromium] › api/withdraws.spec.ts:59:5 › withdraw api test › create a withdraw ==================

    Error: expect(received).toBeTruthy()

    Received: false

      59 |     test('create a withdraw', async ({ request }) => {
      60 |         let response = await request.post(endPoints.createWithdraw, { data: payloads.createWithdraw })
    > 61 |         expect(response.ok()).toBeTruthy()
         |                               ^
      62 |         expect(response.status()).toBe(201)
      63 |
      64 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:61:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      59 |     test('create a withdraw', async ({ request }) => {
      60 |         let response = await request.post(endPoints.createWithdraw, { data: payloads.createWithdraw })
    > 61 |         expect(response.ok()).toBeTruthy()
         |                               ^
      62 |         expect(response.status()).toBe(201)
      63 |
      64 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:61:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      59 |     test('create a withdraw', async ({ request }) => {
      60 |         let response = await request.post(endPoints.createWithdraw, { data: payloads.createWithdraw })
    > 61 |         expect(response.ok()).toBeTruthy()
         |                               ^
      62 |         expect(response.status()).toBe(201)
      63 |
      64 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:61:31
]]>
</failure>
</testcase>
<testcase name="withdraw api test update a withdraw" classname="[chromium] › api/withdraws.spec.ts › withdraw api test › update a withdraw" time="1.207">
<failure message="withdraws.spec.ts:68:5 update a withdraw" type="FAILURE">
<![CDATA[  [chromium] › api/withdraws.spec.ts:68:5 › withdraw api test › update a withdraw ==================

    Error: expect(received).toBeTruthy()

    Received: false

      71 |
      72 |         let response = await request.put(endPoints.updateWithdraw(withdrawId), { data: payloads.updateWithdraw })
    > 73 |         expect(response.ok()).toBeTruthy()
         |                               ^
      74 |         expect(response.status()).toBe(200)
      75 |
      76 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:73:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      71 |
      72 |         let response = await request.put(endPoints.updateWithdraw(withdrawId), { data: payloads.updateWithdraw })
    > 73 |         expect(response.ok()).toBeTruthy()
         |                               ^
      74 |         expect(response.status()).toBe(200)
      75 |
      76 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:73:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      71 |
      72 |         let response = await request.put(endPoints.updateWithdraw(withdrawId), { data: payloads.updateWithdraw })
    > 73 |         expect(response.ok()).toBeTruthy()
         |                               ^
      74 |         expect(response.status()).toBe(200)
      75 |
      76 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:73:31
]]>
</failure>
</testcase>
<testcase name="withdraw api test cancel a withdraw" classname="[chromium] › api/withdraws.spec.ts › withdraw api test › cancel a withdraw" time="1.204">
<failure message="withdraws.spec.ts:80:5 cancel a withdraw" type="FAILURE">
<![CDATA[  [chromium] › api/withdraws.spec.ts:80:5 › withdraw api test › cancel a withdraw ==================

    Error: expect(received).toBeTruthy()

    Received: false

      83 |
      84 |         let response = await request.delete(endPoints.cancelAWithdraw(withdrawId))
    > 85 |         expect(response.ok()).toBeTruthy()
         |                               ^
      86 |         expect(response.status()).toBe(200)
      87 |
      88 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:85:31

    Retry #1 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      83 |
      84 |         let response = await request.delete(endPoints.cancelAWithdraw(withdrawId))
    > 85 |         expect(response.ok()).toBeTruthy()
         |                               ^
      86 |         expect(response.status()).toBe(200)
      87 |
      88 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:85:31

    Retry #2 ---------------------------------------------------------------------------------------

    Error: expect(received).toBeTruthy()

    Received: false

      83 |
      84 |         let response = await request.delete(endPoints.cancelAWithdraw(withdrawId))
    > 85 |         expect(response.ok()).toBeTruthy()
         |                               ^
      86 |         expect(response.status()).toBe(200)
      87 |
      88 |         let responseBody = await response.json()

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/withdraws.spec.ts:85:31
]]>
</failure>
</testcase>
</testsuite>
</testsuites>