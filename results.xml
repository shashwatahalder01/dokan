<testsuites id="" name="" tests="7" failures="5" skipped="0" errors="0" time="13.01098999999999">
<testsuite name="api/quoteRules.spec.ts" timestamp="1671010265747" hostname="" tests="7" failures="5" skipped="0" time="1.403" errors="0">
<testcase name="quote rules api test get all quote rules" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › get all quote rules" time="0.205">
<system-out>
<![CDATA[hellllllllllllllo
{
  rule_name: [32m'QR_3qdgm'[39m,
  selected_user_role: [ [32m'customer'[39m ],
  category_ids: [],
  product_ids: [],
  hide_price: [32m'1'[39m,
  hide_price_text: [32m'Price is hidden'[39m,
  hide_cart_button: [32m'replace'[39m,
  button_text: [32m'Add to quote'[39m,
  apply_on_all_product: [32m'1'[39m,
  rule_priority: [32m'0'[39m,
  status: [32m'publish'[39m
}
[33m404[39m
{
  code: [32m'failed-to-insert'[39m,
  message: [32m'Failed to insert data'[39m,
  data: { status: [33m404[39m }
}
[90mundefined[39m
]]>
</system-out>
</testcase>
<testcase name="quote rules api test get single quote rule" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › get single quote rule" time="0.183">
<failure message="quoteRules.spec.ts:30:5 get single quote rule" type="FAILURE">
<![CDATA[  [chromium] › api/quoteRules.spec.ts:30:5 › quote rules api test › get single quote rule ==========

    Error: expect(received).toBeTruthy()

    Received: false

      33 |         let response = await request.get(endPoints.getSingleQuoteRule(quoteRuleId))
      34 |         let responseBody = await apiUtils.getResponseBody(response)
    > 35 |         expect(response.ok()).toBeTruthy()
         |                               ^
      36 |     });
      37 |
      38 |     test('create a quote rule', async ({ request }) => {

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/quoteRules.spec.ts:35:31
]]>
</failure>
</testcase>
<testcase name="quote rules api test create a quote rule" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › create a quote rule" time="0.196">
<failure message="quoteRules.spec.ts:38:5 create a quote rule" type="FAILURE">
<![CDATA[  [chromium] › api/quoteRules.spec.ts:38:5 › quote rules api test › create a quote rule ============

    Error: expect(received).toBeTruthy()

    Received: false

      39 |         let response = await request.post(endPoints.createQuoteRule, { data: payloads.createQuoteRule() })
      40 |         let responseBody = await apiUtils.getResponseBody(response)
    > 41 |         expect(response.ok()).toBeTruthy()
         |                               ^
      42 |     });
      43 |
      44 |     test('update a quote rule', async ({ request }) => {

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/quoteRules.spec.ts:41:31
]]>
</failure>
<system-out>
<![CDATA[hellllllllllllllo
{
  rule_name: [32m'QR_iphx1'[39m,
  selected_user_role: [ [32m'customer'[39m ],
  category_ids: [],
  product_ids: [],
  hide_price: [32m'1'[39m,
  hide_price_text: [32m'Price is hidden'[39m,
  hide_cart_button: [32m'replace'[39m,
  button_text: [32m'Add to quote'[39m,
  apply_on_all_product: [32m'1'[39m,
  rule_priority: [32m'0'[39m,
  status: [32m'publish'[39m
}
[33m404[39m
{
  code: [32m'failed-to-insert'[39m,
  message: [32m'Failed to insert data'[39m,
  data: { status: [33m404[39m }
}
[90mundefined[39m
]]>
</system-out>
</testcase>
<testcase name="quote rules api test update a quote rule" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › update a quote rule" time="0.162">
<failure message="quoteRules.spec.ts:44:5 update a quote rule" type="FAILURE">
<![CDATA[  [chromium] › api/quoteRules.spec.ts:44:5 › quote rules api test › update a quote rule ============

    Error: expect(received).toBeTruthy()

    Received: false

      47 |         let response = await request.put(endPoints.updateQuoteRule(quoteRuleId), { data: payloads.updateQuoteRule })
      48 |         let responseBody = await apiUtils.getResponseBody(response)
    > 49 |         expect(response.ok()).toBeTruthy()
         |                               ^
      50 |
      51 |     });
      52 |

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/quoteRules.spec.ts:49:31
]]>
</failure>
<system-out>
<![CDATA[hellllllllllllllo
{
  rule_name: [32m'QR_oqfhq'[39m,
  selected_user_role: [ [32m'customer'[39m ],
  category_ids: [],
  product_ids: [],
  hide_price: [32m'1'[39m,
  hide_price_text: [32m'Price is hidden'[39m,
  hide_cart_button: [32m'replace'[39m,
  button_text: [32m'Add to quote'[39m,
  apply_on_all_product: [32m'1'[39m,
  rule_priority: [32m'0'[39m,
  status: [32m'publish'[39m
}
[33m404[39m
{
  code: [32m'failed-to-insert'[39m,
  message: [32m'Failed to insert data'[39m,
  data: { status: [33m404[39m }
}
[90mundefined[39m
]]>
</system-out>
</testcase>
<testcase name="quote rules api test delete a quote rule" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › delete a quote rule" time="0.179">
<failure message="quoteRules.spec.ts:53:5 delete a quote rule" type="FAILURE">
<![CDATA[  [chromium] › api/quoteRules.spec.ts:53:5 › quote rules api test › delete a quote rule ============

    Error: expect(received).toBeTruthy()

    Received: false

      56 |         let response = await request.delete(endPoints.deleteQuoteRule(quoteRuleId))
      57 |         let responseBody = await apiUtils.getResponseBody(response)
    > 58 |         expect(response.ok()).toBeTruthy()
         |                               ^
      59 |     });
      60 |
      61 |     test('restore a deleted quote rule', async ({ request }) => {

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/quoteRules.spec.ts:58:31
]]>
</failure>
<system-out>
<![CDATA[hellllllllllllllo
{
  rule_name: [32m'QR_96883'[39m,
  selected_user_role: [ [32m'customer'[39m ],
  category_ids: [],
  product_ids: [],
  hide_price: [32m'1'[39m,
  hide_price_text: [32m'Price is hidden'[39m,
  hide_cart_button: [32m'replace'[39m,
  button_text: [32m'Add to quote'[39m,
  apply_on_all_product: [32m'1'[39m,
  rule_priority: [32m'0'[39m,
  status: [32m'publish'[39m
}
[33m404[39m
{
  code: [32m'failed-to-insert'[39m,
  message: [32m'Failed to insert data'[39m,
  data: { status: [33m404[39m }
}
[90mundefined[39m
]]>
</system-out>
</testcase>
<testcase name="quote rules api test restore a deleted quote rule" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › restore a deleted quote rule" time="0.165">
<failure message="quoteRules.spec.ts:61:5 restore a deleted quote rule" type="FAILURE">
<![CDATA[  [chromium] › api/quoteRules.spec.ts:61:5 › quote rules api test › restore a deleted quote rule ===

    Error: expect(received).toBeTruthy()

    Received: false

      65 |         let response = await request.put(endPoints.restoreQuoteRule(quoteRuleId))
      66 |         let responseBody = await apiUtils.getResponseBody(response)
    > 67 |         expect(response.ok()).toBeTruthy()
         |                               ^
      68 |     });
      69 |
      70 |     test('update batch quote rules', async ({ request }) => {

        at /home/runner/work/dokan/dokan/tests/e2e/tests/api/quoteRules.spec.ts:67:31
]]>
</failure>
<system-out>
<![CDATA[hellllllllllllllo
{
  rule_name: [32m'QR_dq232'[39m,
  selected_user_role: [ [32m'customer'[39m ],
  category_ids: [],
  product_ids: [],
  hide_price: [32m'1'[39m,
  hide_price_text: [32m'Price is hidden'[39m,
  hide_cart_button: [32m'replace'[39m,
  button_text: [32m'Add to quote'[39m,
  apply_on_all_product: [32m'1'[39m,
  rule_priority: [32m'0'[39m,
  status: [32m'publish'[39m
}
[33m404[39m
{
  code: [32m'failed-to-insert'[39m,
  message: [32m'Failed to insert data'[39m,
  data: { status: [33m404[39m }
}
[90mundefined[39m
]]>
</system-out>
</testcase>
<testcase name="quote rules api test update batch quote rules" classname="[chromium] › api/quoteRules.spec.ts › quote rules api test › update batch quote rules" time="0.313">
<system-out>
<![CDATA[hellllllllllllllo
{
  rule_name: [32m'QR_wp1pa'[39m,
  selected_user_role: [ [32m'customer'[39m ],
  category_ids: [],
  product_ids: [],
  hide_price: [32m'1'[39m,
  hide_price_text: [32m'Price is hidden'[39m,
  hide_cart_button: [32m'replace'[39m,
  button_text: [32m'Add to quote'[39m,
  apply_on_all_product: [32m'1'[39m,
  rule_priority: [32m'0'[39m,
  status: [32m'publish'[39m
}
[33m404[39m
{
  code: [32m'failed-to-insert'[39m,
  message: [32m'Failed to insert data'[39m,
  data: { status: [33m404[39m }
}
[90mundefined[39m
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>